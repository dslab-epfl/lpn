from collections import deque
from lpnlang import Place

pnum_fields_to_fetch = Place("pnum_fields_to_fetch")
pcontrol = Place("pcontrol")
pcontrol_prime = Place("pcontrol_prime")
pfields_meta = Place("pfields_meta")
pfields = Place("pfields")
pmessage_tasks = Place("pmessage_tasks")
ps_hasBitsLoader_IsSubmessageLoad = Place("ps_hasBitsLoader_IsSubmessageLoad") 
ps_hasBitsLoader_HasBitsLoad = Place("ps_hasBitsLoader_HasBitsLoad")
pl2helperUser1Req = Place("pl2helperUser1Req")
pl2helperUser1Resp = Place("pl2helperUser1Resp")
phasbits_request_meta_Q = Place("phasbits_request_meta_Q")
ps_hasBitsLoader_WaitToAdvance = Place("ps_hasBitsLoader_WaitToAdvance")
ps_hasBitsConsumer_AcceptIsSubmessage = Place("ps_hasBitsConsumer_AcceptIsSubmessage")
ps_hasBitsConsumer_AcceptHasBitsAndIterate = Place("ps_hasBitsConsumer_AcceptHasBitsAndIterate")
phasbits_done_chunk = Place("phasbits_done_chunk")
pisnot_submessage_value_resp = Place("pisnot_submessage_value_resp")
pAdvance_OK = Place("pAdvance_OK")
pdescr_request_Q = Place("pdescr_request_Q")
psWaitForRequest = Place("psWaitForRequest")
psWaitForSubmADT = Place("psWaitForSubmADT")
psIssueCPPObjAddrReq = Place("psIssueCPPObjAddrReq")
psIssueADTHeaderReq = Place("psIssueADTHeaderReq")
psAcceptCPPObjAddr = Place("psAcceptCPPObjAddr")
psAcceptADTHeaderReq = Place("psAcceptADTHeaderReq")
pl2helperUser2Req = Place("pl2helperUser2Req")
pl2helperUser2Resp = Place("pl2helperUser2Resp")
pdesc_request_meta_Q = Place("pdesc_request_meta_Q")
ptofieldhandler_dispatcher = Place("ptofieldhandler_dispatcher")
p1 = Place("p1")
pt1t8 = Place("pt1t8")
pcollect = Place("pcollect")
pdispatch_index_holder = Place("pdispatch_index_holder")
pops_in_f1 = Place("pops_in_f1")
pops_in_f2 = Place("pops_in_f2")
pops_in_f3 = Place("pops_in_f3")
pops_in_f4 = Place("pops_in_f4")
pops_in_f5 = Place("pops_in_f5")
pops_in_f6 = Place("pops_in_f6")
pf1_memreadReq = Place("pf1_memreadReq")
pf1_memreadResp = Place("pf1_memreadResp")
pf2_memreadReq = Place("pf2_memreadReq")
pf2_memreadResp = Place("pf2_memreadResp")
pf3_memreadReq = Place("pf3_memreadReq")
pf3_memreadResp = Place("pf3_memreadResp")
pf4_memreadReq = Place("pf4_memreadReq")
pf4_memreadResp = Place("pf4_memreadResp")
pf5_memreadReq = Place("pf5_memreadReq")
pf5_memreadResp = Place("pf5_memreadResp")
pf6_memreadReq = Place("pf6_memreadReq")
pf6_memreadResp = Place("pf6_memreadResp")
pf1_S_WAIT_CMD = Place("pf1_S_WAIT_CMD")
pf1_S_SCALAR_DISPATCH_REQ = Place("pf1_S_SCALAR_DISPATCH_REQ")
pf1_S_SCALAR_OUTPUT_DATA = Place("pf1_S_SCALAR_OUTPUT_DATA")
pf1_S_STRING_GETPTR = Place("pf1_S_STRING_GETPTR")
pf1_S_STRING_GETHEADER1 = Place("pf1_S_STRING_GETHEADER1")
pf1_S_STRING_GETHEADER2 = Place("pf1_S_STRING_GETHEADER2")
pf1_S_STRING_RECVHEADER1 = Place("pf1_S_STRING_RECVHEADER1")
pf1_S_STRING_RECVHEADER2 = Place("pf1_S_STRING_RECVHEADER2")
pf1_S_STRING_LOADDATA = Place("pf1_S_STRING_LOADDATA")
pf1_S_STRING_LOADDATA_resp = Place("pf1_S_STRING_LOADDATA_resp")
pf1_S_STRING_WRITE_KEY = Place("pf1_S_STRING_WRITE_KEY")
pf1_S_UNPACKED_REP_GETPTR = Place("pf1_S_UNPACKED_REP_GETPTR")
pf1_S_UNPACKED_REP_GETSIZE = Place("pf1_S_UNPACKED_REP_GETSIZE")
pf1_S_UNPACKED_REP_RECVPTR = Place("pf1_S_UNPACKED_REP_RECVPTR")
pf1_S_UNPACKED_REP_RECVSIZE = Place("pf1_S_UNPACKED_REP_RECVSIZE")
pf1_S_WRITE_KEY = Place("pf1_S_WRITE_KEY")
pf1_outputQ = Place("pf1_outputQ")
pf1_finished = Place("pf1_finished")
pf1_num_units = Place("pf1_num_units")
pf1_units = Place("pf1_units")
pf1_hold = Place("pf1_hold")
pf2_S_WAIT_CMD = Place("pf2_S_WAIT_CMD")
pf2_S_SCALAR_DISPATCH_REQ = Place("pf2_S_SCALAR_DISPATCH_REQ")
pf2_S_SCALAR_OUTPUT_DATA = Place("pf2_S_SCALAR_OUTPUT_DATA")
pf2_S_STRING_GETPTR = Place("pf2_S_STRING_GETPTR")
pf2_S_STRING_GETHEADER1 = Place("pf2_S_STRING_GETHEADER1")
pf2_S_STRING_GETHEADER2 = Place("pf2_S_STRING_GETHEADER2")
pf2_S_STRING_RECVHEADER1 = Place("pf2_S_STRING_RECVHEADER1")
pf2_S_STRING_RECVHEADER2 = Place("pf2_S_STRING_RECVHEADER2")
pf2_S_STRING_LOADDATA = Place("pf2_S_STRING_LOADDATA")
pf2_S_STRING_LOADDATA_resp = Place("pf2_S_STRING_LOADDATA_resp")
pf2_S_STRING_WRITE_KEY = Place("pf2_S_STRING_WRITE_KEY")
pf2_S_UNPACKED_REP_GETPTR = Place("pf2_S_UNPACKED_REP_GETPTR")
pf2_S_UNPACKED_REP_GETSIZE = Place("pf2_S_UNPACKED_REP_GETSIZE")
pf2_S_UNPACKED_REP_RECVPTR = Place("pf2_S_UNPACKED_REP_RECVPTR")
pf2_S_UNPACKED_REP_RECVSIZE = Place("pf2_S_UNPACKED_REP_RECVSIZE")
pf2_S_WRITE_KEY = Place("pf2_S_WRITE_KEY")
pf2_outputQ = Place("pf2_outputQ")
pf2_finished = Place("pf2_finished")
pf2_num_units = Place("pf2_num_units")
pf2_units = Place("pf2_units")
pf2_hold = Place("pf2_hold")
pf3_S_WAIT_CMD = Place("pf3_S_WAIT_CMD")
pf3_S_SCALAR_DISPATCH_REQ = Place("pf3_S_SCALAR_DISPATCH_REQ")
pf3_S_SCALAR_OUTPUT_DATA = Place("pf3_S_SCALAR_OUTPUT_DATA")
pf3_S_STRING_GETPTR = Place("pf3_S_STRING_GETPTR")
pf3_S_STRING_GETHEADER1 = Place("pf3_S_STRING_GETHEADER1")
pf3_S_STRING_GETHEADER2 = Place("pf3_S_STRING_GETHEADER2")
pf3_S_STRING_RECVHEADER1 = Place("pf3_S_STRING_RECVHEADER1")
pf3_S_STRING_RECVHEADER2 = Place("pf3_S_STRING_RECVHEADER2")
pf3_S_STRING_LOADDATA = Place("pf3_S_STRING_LOADDATA")
pf3_S_STRING_LOADDATA_resp = Place("pf3_S_STRING_LOADDATA_resp")
pf3_S_STRING_WRITE_KEY = Place("pf3_S_STRING_WRITE_KEY")
pf3_S_UNPACKED_REP_GETPTR = Place("pf3_S_UNPACKED_REP_GETPTR")
pf3_S_UNPACKED_REP_GETSIZE = Place("pf3_S_UNPACKED_REP_GETSIZE")
pf3_S_UNPACKED_REP_RECVPTR = Place("pf3_S_UNPACKED_REP_RECVPTR")
pf3_S_UNPACKED_REP_RECVSIZE = Place("pf3_S_UNPACKED_REP_RECVSIZE")
pf3_S_WRITE_KEY = Place("pf3_S_WRITE_KEY")
pf3_outputQ = Place("pf3_outputQ")
pf3_finished = Place("pf3_finished")
pf3_num_units = Place("pf3_num_units")
pf3_units = Place("pf3_units")
pf3_hold = Place("pf3_hold")
pf4_S_WAIT_CMD = Place("pf4_S_WAIT_CMD")
pf4_S_SCALAR_DISPATCH_REQ = Place("pf4_S_SCALAR_DISPATCH_REQ")
pf4_S_SCALAR_OUTPUT_DATA = Place("pf4_S_SCALAR_OUTPUT_DATA")
pf4_S_STRING_GETPTR = Place("pf4_S_STRING_GETPTR")
pf4_S_STRING_GETHEADER1 = Place("pf4_S_STRING_GETHEADER1")
pf4_S_STRING_GETHEADER2 = Place("pf4_S_STRING_GETHEADER2")
pf4_S_STRING_RECVHEADER1 = Place("pf4_S_STRING_RECVHEADER1")
pf4_S_STRING_RECVHEADER2 = Place("pf4_S_STRING_RECVHEADER2")
pf4_S_STRING_LOADDATA = Place("pf4_S_STRING_LOADDATA")
pf4_S_STRING_LOADDATA_resp = Place("pf4_S_STRING_LOADDATA_resp")
pf4_S_STRING_WRITE_KEY = Place("pf4_S_STRING_WRITE_KEY")
pf4_S_UNPACKED_REP_GETPTR = Place("pf4_S_UNPACKED_REP_GETPTR")
pf4_S_UNPACKED_REP_GETSIZE = Place("pf4_S_UNPACKED_REP_GETSIZE")
pf4_S_UNPACKED_REP_RECVPTR = Place("pf4_S_UNPACKED_REP_RECVPTR")
pf4_S_UNPACKED_REP_RECVSIZE = Place("pf4_S_UNPACKED_REP_RECVSIZE")
pf4_S_WRITE_KEY = Place("pf4_S_WRITE_KEY")
pf4_outputQ = Place("pf4_outputQ")
pf4_finished = Place("pf4_finished")
pf4_num_units = Place("pf4_num_units")
pf4_units = Place("pf4_units")
pf4_hold = Place("pf4_hold")
pf5_S_WAIT_CMD = Place("pf5_S_WAIT_CMD")
pf5_S_SCALAR_DISPATCH_REQ = Place("pf5_S_SCALAR_DISPATCH_REQ")
pf5_S_SCALAR_OUTPUT_DATA = Place("pf5_S_SCALAR_OUTPUT_DATA")
pf5_S_STRING_GETPTR = Place("pf5_S_STRING_GETPTR")
pf5_S_STRING_GETHEADER1 = Place("pf5_S_STRING_GETHEADER1")
pf5_S_STRING_GETHEADER2 = Place("pf5_S_STRING_GETHEADER2")
pf5_S_STRING_RECVHEADER1 = Place("pf5_S_STRING_RECVHEADER1")
pf5_S_STRING_RECVHEADER2 = Place("pf5_S_STRING_RECVHEADER2")
pf5_S_STRING_LOADDATA = Place("pf5_S_STRING_LOADDATA")
pf5_S_STRING_LOADDATA_resp = Place("pf5_S_STRING_LOADDATA_resp")
pf5_S_STRING_WRITE_KEY = Place("pf5_S_STRING_WRITE_KEY")
pf5_S_UNPACKED_REP_GETPTR = Place("pf5_S_UNPACKED_REP_GETPTR")
pf5_S_UNPACKED_REP_GETSIZE = Place("pf5_S_UNPACKED_REP_GETSIZE")
pf5_S_UNPACKED_REP_RECVPTR = Place("pf5_S_UNPACKED_REP_RECVPTR")
pf5_S_UNPACKED_REP_RECVSIZE = Place("pf5_S_UNPACKED_REP_RECVSIZE")
pf5_S_WRITE_KEY = Place("pf5_S_WRITE_KEY")
pf5_outputQ = Place("pf5_outputQ")
pf5_finished = Place("pf5_finished")
pf5_num_units = Place("pf5_num_units")
pf5_units = Place("pf5_units")
pf5_hold = Place("pf5_hold")
pf6_S_WAIT_CMD = Place("pf6_S_WAIT_CMD")
pf6_S_SCALAR_DISPATCH_REQ = Place("pf6_S_SCALAR_DISPATCH_REQ")
pf6_S_SCALAR_OUTPUT_DATA = Place("pf6_S_SCALAR_OUTPUT_DATA")
pf6_S_STRING_GETPTR = Place("pf6_S_STRING_GETPTR")
pf6_S_STRING_GETHEADER1 = Place("pf6_S_STRING_GETHEADER1")
pf6_S_STRING_GETHEADER2 = Place("pf6_S_STRING_GETHEADER2")
pf6_S_STRING_RECVHEADER1 = Place("pf6_S_STRING_RECVHEADER1")
pf6_S_STRING_RECVHEADER2 = Place("pf6_S_STRING_RECVHEADER2")
pf6_S_STRING_LOADDATA = Place("pf6_S_STRING_LOADDATA")
pf6_S_STRING_LOADDATA_resp = Place("pf6_S_STRING_LOADDATA_resp")
pf6_S_STRING_WRITE_KEY = Place("pf6_S_STRING_WRITE_KEY")
pf6_S_UNPACKED_REP_GETPTR = Place("pf6_S_UNPACKED_REP_GETPTR")
pf6_S_UNPACKED_REP_GETSIZE = Place("pf6_S_UNPACKED_REP_GETSIZE")
pf6_S_UNPACKED_REP_RECVPTR = Place("pf6_S_UNPACKED_REP_RECVPTR")
pf6_S_UNPACKED_REP_RECVSIZE = Place("pf6_S_UNPACKED_REP_RECVSIZE")
pf6_S_WRITE_KEY = Place("pf6_S_WRITE_KEY")
pf6_outputQ = Place("pf6_outputQ")
pf6_finished = Place("pf6_finished")
pf6_num_units = Place("pf6_num_units")
pf6_units = Place("pf6_units")
pf6_hold = Place("pf6_hold")
pwrites_input_IF_Q = Place("pwrites_input_IF_Q")
pwrites_inject_Q = Place("pwrites_inject_Q")
pmem_resp_queues = Place("pmem_resp_queues")
pmem_resp_queues_cap = Place("pmem_resp_queues_cap")
pwrite_mem_req = Place("pwrite_mem_req")
pwrite_mem_resp = Place("pwrite_mem_resp")
pwrite_index_holder = Place("pwrite_index_holder")
pwrite_mem_request_cap = Place("pwrite_mem_request_cap")
pmem_resp_queues = Place("pmem_resp_queues")
pmem_resp_queues_cap = Place("pmem_resp_queues_cap")
pwrite_mem_req = Place("pwrite_mem_req")
pwrite_mem_resp = Place("pwrite_mem_resp")
pwrite_mem_request_cap = Place("pwrite_mem_request_cap")
pwrites_inject_Q_non_top = Place("pwrites_inject_Q_non_top")
pwrites_inject_Q_top = Place("pwrites_inject_Q_top")
phold = Place("phold")
pf1_dist_hold = Place("pf1_dist_hold")
pops_in_f1_eom = Place("pops_in_f1_eom")
pops_in_f1_scalar = Place("pops_in_f1_scalar")
pops_in_f1_non_scalar = Place("pops_in_f1_non_scalar")
pops_in_f1_repeated = Place("pops_in_f1_repeated")
pf2_dist_hold = Place("pf2_dist_hold")
pops_in_f2_eom = Place("pops_in_f2_eom")
pops_in_f2_scalar = Place("pops_in_f2_scalar")
pops_in_f2_non_scalar = Place("pops_in_f2_non_scalar")
pops_in_f2_repeated = Place("pops_in_f2_repeated")
pf3_dist_hold = Place("pf3_dist_hold")
pops_in_f3_eom = Place("pops_in_f3_eom")
pops_in_f3_scalar = Place("pops_in_f3_scalar")
pops_in_f3_non_scalar = Place("pops_in_f3_non_scalar")
pops_in_f3_repeated = Place("pops_in_f3_repeated")
pf4_dist_hold = Place("pf4_dist_hold")
pops_in_f4_eom = Place("pops_in_f4_eom")
pops_in_f4_scalar = Place("pops_in_f4_scalar")
pops_in_f4_non_scalar = Place("pops_in_f4_non_scalar")
pops_in_f4_repeated = Place("pops_in_f4_repeated")
pf5_dist_hold = Place("pf5_dist_hold")
pops_in_f5_eom = Place("pops_in_f5_eom")
pops_in_f5_scalar = Place("pops_in_f5_scalar")
pops_in_f5_non_scalar = Place("pops_in_f5_non_scalar")
pops_in_f5_repeated = Place("pops_in_f5_repeated")
pf6_dist_hold = Place("pf6_dist_hold")
pops_in_f6_eom = Place("pops_in_f6_eom")
pops_in_f6_scalar = Place("pops_in_f6_scalar")
pops_in_f6_non_scalar = Place("pops_in_f6_non_scalar")
pops_in_f6_repeated = Place("pops_in_f6_repeated")
pdispatch_hold = Place("pdispatch_hold")
pdispatch_index_holder_f1 = Place("pdispatch_index_holder_f1")
pdispatch_index_holder_f2 = Place("pdispatch_index_holder_f2") 
pdispatch_index_holder_f3 = Place("pdispatch_index_holder_f3") 
pdispatch_index_holder_f4 = Place("pdispatch_index_holder_f4")
pdispatch_index_holder_f5 = Place("pdispatch_index_holder_f5")
pdispatch_index_holder_f6 = Place("pdispatch_index_holder_f6")
pwrite_hold = Place("pwrite_hold")
pwrite_index_holder_f1 = Place("pwrite_index_holder_f1")
pwrite_index_holder_f2 = Place("pwrite_index_holder_f2") 
pwrite_index_holder_f3 = Place("pwrite_index_holder_f3") 
pwrite_index_holder_f4 = Place("pwrite_index_holder_f4")
pwrite_index_holder_f5 = Place("pwrite_index_holder_f5")
pwrite_index_holder_f6 = Place("pwrite_index_holder_f6")
pholder_split_msg = Place("pholder_split_msg")
p10_descr = Place("p10_descr")
p9_descr = Place("p9_descr")

