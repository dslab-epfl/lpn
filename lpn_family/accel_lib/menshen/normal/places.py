from lpnlang import Place 

p_before_pkt_filter = Place("p_before_pkt_filter")
p_after_pkt_filter_fifo = Place("p_after_pkt_filter_fifo")
p_control_drop = Place("control_drop") # Sink Place for control and drop packets
p_after_pkt_filter = Place("p_after_pkt_filter")
p_after_pkt_filter_reg_delay_to_parser = Place("p_after_pkt_filter_reg_delay_to_parser")
p_after_pkt_filter_reg_delay_to_parser_delayed = Place("p_after_pkt_filter_reg_delay_to_parser_delayed")
p_after_pkt_filter_reg_delay_to_pkt_fifos = Place("p_after_pkt_filter_reg_delay_to_pkt_fifos")
p_after_parser_get_segs = Place("p_after_parser_get_segs")
p_after_parser_get_segs_reg_delay = Place("p_after_parser_get_segs_reg_delay")
p_subparser_dispatch_cnt = Place("p_subparser_dispatch_cnt")
p_subparser_aggregate_cnt = Place("p_subparser_aggregate_cnt")
p_before_subparser_0 = Place("p_before_subparser_0")
p_before_subparser_1 = Place("p_before_subparser_1")
p_after_subparser_0 = Place("p_after_subparser_0")
p_after_subparser_0.type_annotations = ['n_words', 'is_control', 'is_data', 'is_drop']
p_after_subparser_1 = Place("p_after_subparser_1")
p_after_subparser_1.type_annotations = ['n_words', 'is_control', 'is_data', 'is_drop']
p_subparser_result = Place("p_subparser_result")
p_before_stage_0 = Place("p_before_stage_0")
p_before_stage_1 = Place("p_before_stage_1")
p_before_stage_2 = Place("p_before_stage_2")
p_before_stage_3 = Place("p_before_stage_3")
p_before_stage_4 = Place("p_before_stage_4")
p_phv_fifo_cnt = Place("p_phv_fifo_cnt")
p_before_phv_fifo_0 = Place("p_before_phv_fifo_0")
p_before_phv_fifo_1 = Place("p_before_phv_fifo_1")
p_before_phv_fifo_2 = Place("p_before_phv_fifo_2")
p_before_phv_fifo_3 = Place("p_before_phv_fifo_3")
p_after_phv_fifo_0 = Place("p_after_phv_fifo_0")
p_after_phv_fifo_1 = Place("p_after_phv_fifo_1")
p_after_phv_fifo_2 = Place("p_after_phv_fifo_2")
p_after_phv_fifo_3 = Place("p_after_phv_fifo_3")
p_after_subdeparser_0 = Place("p_after_subdeparser_0")
p_after_subdeparser_0.type_annotations = ['n_words', 'is_control', 'is_data', 'is_drop']
p_after_subdeparser_1 = Place("p_after_subdeparser_1")
p_after_subdeparser_1.type_annotations = ['n_words', 'is_control', 'is_data', 'is_drop']
p_after_subdeparser_2 = Place("p_after_subdeparser_2")
p_after_subdeparser_2.type_annotations = ['n_words', 'is_control', 'is_data', 'is_drop']
p_after_subdeparser_3 = Place("p_after_subdeparser_3")
p_after_subdeparser_3.type_annotations = ['n_words', 'is_control', 'is_data', 'is_drop']
p_output_arbiter_cnt = Place("p_output_arbiter_cnt")
p_pkt_fifo_cnt = Place("p_pkt_fifo_cnt")
p_before_pkt_fifo_0 = Place("p_before_pkt_fifo_0")
p_before_pkt_fifo_1 = Place("p_before_pkt_fifo_1")
p_before_pkt_fifo_2 = Place("p_before_pkt_fifo_2")
p_before_pkt_fifo_3 = Place("p_before_pkt_fifo_3")
p_after_pkt_fifo_0 = Place("p_after_pkt_fifo_0")
p_after_pkt_fifo_1 = Place("p_after_pkt_fifo_1")
p_after_pkt_fifo_2 = Place("p_after_pkt_fifo_2")
p_after_pkt_fifo_3 = Place("p_after_pkt_fifo_3")
p_after_output_arbiter = Place("p_after_output_arbiter")

