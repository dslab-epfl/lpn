#include "places.hh"
Place<token_class_bytes> pfields("pfields");
Place<token_class_type_control_range> pmessage_tasks("pmessage_tasks");
Place<> ps_hasBitsLoader_IsSubmessageLoad("ps_hasBitsLoader_IsSubmessageLoad");
Place<> ps_hasBitsLoader_HasBitsLoad("ps_hasBitsLoader_HasBitsLoad");
Place<token_class_bytes_end_of_field_end_of_top_level> pwrites_input_IF_Q("pwrites_input_IF_Q");
Place<token_class_field_index> pdispatch_index_holder_f1("pdispatch_index_holder_f1");
Place<> pl2helperUser1Req("pl2helperUser1Req");
Place<token_class_bytes_end_of_field_end_of_top_level> pwrites_inject_Q("pwrites_inject_Q");
Place<> pf1_S_WAIT_CMD("pf1_S_WAIT_CMD");
Place<> pl2helperUser1Resp("pl2helperUser1Resp");
Place<> pf1_S_SCALAR_DISPATCH_REQ("pf1_S_SCALAR_DISPATCH_REQ");
Place<> pf1_S_STRING_GETPTR("pf1_S_STRING_GETPTR");
Place<> pwrite_mem_resp("pwrite_mem_resp");
Place<token_class_bytes_end_of_field_end_of_top_level> pwrites_inject_Q_non_top("pwrites_inject_Q_non_top");
Place<> pwrite_hold("pwrite_hold");
Place<token_class_field_index> pwrite_index_holder("pwrite_index_holder");
Place<token_class_field_index> pwrite_index_holder_f1("pwrite_index_holder_f1");
Place<> pisnot_submessage_value_resp("pisnot_submessage_value_resp");
Place<token_class_bytes> pf1_S_STRING_LOADDATA("pf1_S_STRING_LOADDATA");
Place<token_class_bytes_end_of_field_end_of_top_level> pwrites_inject_Q_top("pwrites_inject_Q_top");
Place<token_class_type_num> pops_in_f1("pops_in_f1");
Place<> pAdvance_OK("pAdvance_OK");
Place<> phold("phold");
Place<> pf1_S_STRING_WRITE_KEY("pf1_S_STRING_WRITE_KEY");
Place<token_class_type_control_range> pdescr_request_Q("pdescr_request_Q");
Place<> pf1_dist_hold("pf1_dist_hold");
Place<token_class_type_num> pf1_S_UNPACKED_REP_GETPTR("pf1_S_UNPACKED_REP_GETPTR");
Place<> psWaitForRequest("psWaitForRequest");
Place<token_class_type_num> pops_in_f1_eom("pops_in_f1_eom");
Place<token_class_type_num> pops_in_f1_scalar("pops_in_f1_scalar");
Place<token_class_type_control_range> p10_descr("p10_descr");
Place<token_class_type_num> pops_in_f1_non_scalar("pops_in_f1_non_scalar");
Place<> pholder_split_msg("pholder_split_msg");
Place<token_class_type_num> pops_in_f1_repeated("pops_in_f1_repeated");
Place<token_class_type_control_range> p9_descr("p9_descr");
Place<> pf1_S_WRITE_KEY("pf1_S_WRITE_KEY");
Place<token_class_bytes_end_of_field_end_of_top_level> pf1_outputQ("pf1_outputQ");
Place<> pl2helperUser2Req("pl2helperUser2Req");
Place<> pf1_finished("pf1_finished");
Place<> pl2helperUser2Resp("pl2helperUser2Resp");
Place<token_class_num> pf1_num_units("pf1_num_units");
Place<token_class_bytes> pf1_units("pf1_units");
Place<token_class_type_num> ptofieldhandler_dispatcher("ptofieldhandler_dispatcher");
Place<> pf1_hold("pf1_hold");
Place<token_class_type_control_range> pcollect("pcollect");
Place<token_class_field_index> pdispatch_index_holder("pdispatch_index_holder");
Place<> pdispatch_hold("pdispatch_hold");
Place<token_class_type_num> pfields_meta("pfields_meta");
Place<token_class_type_control_range> pcontrol_prime("pcontrol_prime");
Place<> pf1_memreadReq("pf1_memreadReq");
Place<token_class_type_control_range> pcontrol("pcontrol");
Place<> pf1_memreadResp("pf1_memreadResp");
